{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/USER/Documents/Tec/Noveno Semestre/Blockchain/fcctoken/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(web3s) {\n    this.web3s = web3s;\n    this.title = 'Ejemplo Ethereum';\n    this.msgEstado = 'No Conectado.';\n    this.estado = false;\n    this.count = 0;\n    this.resultado = '';\n    this.points = 0;\n    this.totalRewardPoints = 0;\n    this.blockHash = '';\n    this.blockNumber = '';\n    this.from = '';\n    this.transactionHash = '';\n    this.totalBalance = '';\n    this.amount = '';\n    this.rewardPoints = '';\n    this.exchangedRewardPoints = '';\n    this.balanceOf = '';\n    this.tokensAprovados = '';\n    this.resultTransferencia = '';\n    this.resultTransferenciaAprobada = '';\n    this.resultAprove = '';\n    this.elementos = [];\n    this.elementosClient = [];\n    this.cabeceras = ['Transaction Hash', 'Block Number', 'Amount', 'Sended Reward Points', 'Total Reward Points', 'To'];\n    this.cabecerasClient = ['Transaction Hash', 'Block Number', 'Total Reward Points', 'Exchanged Reward Points', 'From'];\n    this.sendPointsForm = new FormGroup({\n      accountAddress: new FormControl(''),\n      sellAmount: new FormControl('')\n    });\n    this.exchangedPointsForm = new FormGroup({\n      exchangePoints: new FormControl('')\n    }); //---------------------\n\n    this.consultaSaldoForm = new FormGroup({\n      addressConsultaSaldo: new FormControl('')\n    });\n    this.consultaAprobacionExternaForm = new FormGroup({\n      addressPropietario: new FormControl(''),\n      addressAprovada: new FormControl('')\n    });\n    this.transferirForm = new FormGroup({\n      addressDestino: new FormControl(''),\n      cantidadTokens: new FormControl('')\n    });\n    this.transferirFromForm = new FormGroup({\n      addressRemitenteFrom: new FormControl(''),\n      addressDestinoFrom: new FormControl(''),\n      cantidadTokensFrom: new FormControl('')\n    });\n    this.aprovarForm = new FormGroup({\n      addressAprobar: new FormControl(''),\n      cantidadTokens: new FormControl('')\n    });\n  }\n\n  ngAfterViewInit() {\n    this.conectar();\n    this.scrollContainer = this.scrollFrame.nativeElement; //this.elementos.changes.subscribe(() => this.onElementosChanged());   \n  }\n\n  onElementosChanged() {\n    this.scrollToBottom();\n  }\n\n  conectar() {\n    this.web3s.connectAccount().then(r => {\n      this.msgEstado = \"Conectado.\";\n      this.estado = true;\n      this.subscribeToEvents();\n    });\n  }\n  /*\r\n    getTotalRewardPoints(): void {\r\n      this.web3s.contrato.methods.getTotalRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.totalRewardPoints = response;\r\n        console.log(`totalRewardPoints => ${response}`);\r\n      });\r\n    }\r\n  \r\n    getRewardPoints(): void {\r\n      this.web3s.contrato.methods.getRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.getRewardPoints = response;\r\n        console.log(`getRewardPoints => ${response}`);\r\n      });\r\n    }\r\n  \r\n    getExchangedRewardPoints(): void {\r\n      this.web3s.contrato.methods.getExchangedRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.getRewardPoints = response;\r\n        console.log(`getExchangedRewardPoints => ${response}`);\r\n      });\r\n    }*/\n  //-----------------------Nueva---------------------//\n  //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\n\n\n  getBalance() {\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0]).call().then(response => {\n      this.balanceOf = response;\n    });\n  }\n\n  getBalanceByAccount(accountAddress) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.web3s.contrato.methods.balanceOf(accountAddress).call();\n    })();\n  }\n\n  getAllowance(accountPropietario, accountAprovada) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.web3s.contrato.methods.allowance(accountPropietario, accountAprovada).call();\n    })();\n  }\n\n  checarBalance() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const addressDapp = (_a = _this3.consultaSaldoForm.get('addressConsultaSaldo')) === null || _a === void 0 ? void 0 : _a.value;\n      console.log(addressDapp);\n      const accountBalance = yield _this3.getBalanceByAccount(addressDapp);\n      console.log(`accountBalance => ${accountBalance}`);\n      _this3.balanceOf = accountBalance;\n    })();\n  }\n\n  checarAprovacion() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressPropietario = (_a = _this4.consultaAprobacionExternaForm.get('addressPropietario')) === null || _a === void 0 ? void 0 : _a.value;\n      const addressAprovada = (_b = _this4.consultaAprobacionExternaForm.get('addressAprovada')) === null || _b === void 0 ? void 0 : _b.value; //return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n\n      const tokensAprovados = yield _this4.getAllowance(addressPropietario, addressAprovada);\n      console.log(tokensAprovados);\n      _this4.tokensAprovados = tokensAprovados;\n    })();\n  }\n\n  transferirTokens() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressDestino = (_a = _this5.transferirForm.get('addressDestino')) === null || _a === void 0 ? void 0 : _a.value;\n      const tokensEnviados = (_b = _this5.transferirForm.get('cantidadTokens')) === null || _b === void 0 ? void 0 : _b.value;\n\n      _this5.web3s.contrato.methods.transfer(addressDestino, tokensEnviados).send({\n        from: _this5.web3s.accounts[0]\n      }).then(response => {\n        _this5.resultTransferencia = \"Transacción realizada!\";\n        _this5.blockHash = response.blockHash;\n        _this5.blockNumber = response.blockNumber;\n        _this5.from = response.from;\n        _this5.transactionHash = response.transactionHash;\n\n        _this5.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this5.resultTransferencia = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  aprovarUsoDeTokens() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressAprobada = (_a = _this6.aprovarForm.get('addressAprobar')) === null || _a === void 0 ? void 0 : _a.value;\n      const cantidadTokens = (_b = _this6.aprovarForm.get('cantidadTokens')) === null || _b === void 0 ? void 0 : _b.value;\n      console.log(addressAprobada);\n      console.log(cantidadTokens);\n\n      _this6.web3s.contrato.methods.approve(addressAprobada, cantidadTokens).send({\n        from: _this6.web3s.accounts[0]\n      }).then(response => {\n        _this6.resultAprove = \"Transacción realizada!\";\n        _this6.blockHash = response.blockHash;\n        _this6.blockNumber = response.blockNumber;\n        _this6.from = response.from;\n        _this6.transactionHash = response.transactionHash;\n\n        _this6.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this6.resultAprove = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  transferirTokensAprobados() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      const addressRemitenteFrom = (_a = _this7.transferirFromForm.get('addressRemitenteFrom')) === null || _a === void 0 ? void 0 : _a.value;\n      const addressDestinoFrom = (_b = _this7.transferirFromForm.get('addressDestinoFrom')) === null || _b === void 0 ? void 0 : _b.value;\n      const tokensEnviadosFrom = (_c = _this7.transferirFromForm.get('cantidadTokensFrom')) === null || _c === void 0 ? void 0 : _c.value;\n\n      _this7.web3s.contrato.methods.transferFrom(addressRemitenteFrom, addressDestinoFrom, tokensEnviadosFrom).send({\n        from: _this7.web3s.accounts[0]\n      }).then(response => {\n        _this7.resultTransferenciaAprobada = \"Transacción realizada!\";\n        _this7.blockHash = response.blockHash;\n        _this7.blockNumber = response.blockNumber;\n        _this7.from = response.from;\n        _this7.transactionHash = response.transactionHash;\n\n        _this7.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this7.resultTransferenciaAprobada = \"Error en la transacción!\";\n      });\n    })();\n  } //----------------------Termina--------------//\n\n\n  borrar() {\n    this.resultado = \"\";\n    this.blockHash = \"\";\n    this.blockNumber = \"\";\n    this.from = \"\";\n    this.transactionHash = \"\";\n  }\n\n  subscribeToEvents() {\n    var _this8 = this;\n\n    // Subscribe to pending transactions\n    const self = this;\n    this.web3s.contrato.events.Transfer({\n      fromBlock: 0\n    }, (error, event) => {\n      if (!error) {\n        // setInterval(() => {\n        const abiDecoder = require('abi-decoder'); // NodeJS\n\n\n        abiDecoder.addABI(this.web3s.abi);\n        this.web3s.web3js.eth.getTransaction(event.transactionHash).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            const decodedData = abiDecoder.decodeMethod(data.input);\n\n            if (decodedData != undefined) {\n              //recuperando datos registrados al enviar puntos\n              //datos recuperados: amount, rewardPoints\n              if (decodedData.name == 'sendPoints') {\n                _this8.amount = decodedData.params[1].value;\n                _this8.rewardPoints = decodedData.params[2].value;\n                _this8.exchangedRewardPoints = '0';\n                _this8.totalRewardPoints = decodedData.params[3].value;\n\n                _this8.elementos.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  amount: _this8.amount,\n                  rewardPoints: _this8.rewardPoints,\n                  totalRewardPoints: _this8.totalRewardPoints,\n                  accountAddress: event.returnValues.to\n                });\n\n                _this8.elementos = _this8.elementos.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber)); //recuperando data de los puntos intercambiados\n                //datos recuperados: exchangedRewardPoints\n              } else if (decodedData.name == 'exchangePoints') {\n                _this8.exchangedRewardPoints = decodedData.params[1].value;\n                _this8.totalRewardPoints = decodedData.params[2].value;\n\n                _this8.elementosClient.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  exchangedRewardPoints: _this8.exchangedRewardPoints,\n                  totalRewardPoints: _this8.totalRewardPoints,\n                  accountAddress: event.returnValues.from\n                });\n\n                _this8.elementosClient = _this8.elementosClient.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n              } else {}\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()); // }, 500);                                                                                                \n      }\n    });\n  }\n\n  scrollToBottom() {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n};\n\n__decorate([ViewChild('scrollframe', {\n  static: false\n})], AppComponent.prototype, \"scrollFrame\", void 0);\n\n__decorate([ViewChildren('item')], AppComponent.prototype, \"itemElements\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  styles: []\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["C:\\Users\\USER\\Documents\\Tec\\Noveno Semestre\\Blockchain\\fcctoken\\src\\app\\app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nimport { Component, AfterViewInit, ElementRef, ViewChild,ViewChildren,QueryList} from '@angular/core';\nimport { Web3Service } from './services/web3.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('scrollframe',{static:false}) private scrollFrame!: ElementRef;\n  @ViewChildren('item') itemElements!: QueryList<any>;\n\n  private scrollContainer: any;\n\n  title = 'Ejemplo Ethereum';\n  msgEstado = 'No Conectado.';\n  estado = false;\n  count = 0;\n  resultado = '';\n  points = 0;\n  totalRewardPoints = 0;\n\n  blockHash = '';\n  blockNumber = '';\n  from = '';\n  transactionHash = '';\n  totalBalance = '';\n  amount = '';\n  rewardPoints = '';\n  exchangedRewardPoints = '';\n\n  balanceOf = '';\n  tokensAprovados = '';\n  resultTransferencia='';\n  resultTransferenciaAprobada='';\n  resultAprove='';\n\n\n  elementos: any = [];  \n  elementosClient: any = [];  \n\n  cabeceras = ['Transaction Hash', 'Block Number','Amount','Sended Reward Points','Total Reward Points','To'];\n  cabecerasClient = ['Transaction Hash', 'Block Number','Total Reward Points','Exchanged Reward Points','From'];\n\n  constructor(public web3s: Web3Service){}\n\n  sendPointsForm = new FormGroup({\n    accountAddress: new FormControl(''),\n    sellAmount: new FormControl('')\n  });\n\n  exchangedPointsForm = new FormGroup({\n    exchangePoints: new FormControl('')\n  });\n\n  //---------------------\n  consultaSaldoForm = new FormGroup({\n    addressConsultaSaldo: new FormControl('')\n  });\n\n  consultaAprobacionExternaForm = new FormGroup({\n    addressPropietario: new FormControl(''),\n    addressAprovada: new FormControl('')\n  });\n\n  transferirForm = new FormGroup({\n    addressDestino: new FormControl(''),\n    cantidadTokens: new FormControl('')\n  });\n\n  transferirFromForm = new FormGroup({\n    addressRemitenteFrom: new FormControl(''),\n    addressDestinoFrom: new FormControl(''),\n    cantidadTokensFrom: new FormControl('')\n  });\n\n  aprovarForm = new FormGroup({\n    addressAprobar: new FormControl(''),\n    cantidadTokens: new FormControl('')\n  });\n\n  ngAfterViewInit(): void {\n    this.conectar();\n    this.scrollContainer = this.scrollFrame.nativeElement;      \n    //this.elementos.changes.subscribe(() => this.onElementosChanged());   \n  }\n\n  private onElementosChanged(): void {\n    this.scrollToBottom();\n  }\n\n  conectar():void {\n    this.web3s.connectAccount().then((r)=>{ \n      this.msgEstado = \"Conectado.\";\n      this.estado = true;\n      this.subscribeToEvents();\n    });\n  }\n/*\n  getTotalRewardPoints(): void {\n    this.web3s.contrato.methods.getTotalRewardPoints()\n    .call()\n    .then((response: any) => {\n      this.totalRewardPoints = response;\n      console.log(`totalRewardPoints => ${response}`);\n    });\n  }\n\n  getRewardPoints(): void {\n    this.web3s.contrato.methods.getRewardPoints()\n    .call()\n    .then((response: any) => {\n      this.getRewardPoints = response;\n      console.log(`getRewardPoints => ${response}`);\n    });\n  }\n\n  getExchangedRewardPoints(): void {\n    this.web3s.contrato.methods.getExchangedRewardPoints()\n    .call()\n    .then((response: any) => {\n      this.getRewardPoints = response;\n      console.log(`getExchangedRewardPoints => ${response}`);\n    });\n  }*/\n\n\n\n\n\n  //-----------------------Nueva---------------------//\n    //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\n  getBalance(): void {\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0])\n    .call()\n    .then((response: any) => {\n      this.balanceOf = response;\n    });\n  }\n  async getBalanceByAccount(accountAddress: any): Promise<any> {\n    return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n  }\n  async getAllowance(accountPropietario: any, accountAprovada: any): Promise<any> {\n    return await this.web3s.contrato.methods.allowance(accountPropietario, accountAprovada).call();\n  }\n\n  async checarBalance(): Promise<void> {\n    const addressDapp =  this.consultaSaldoForm.get('addressConsultaSaldo')?.value;\n    console.log(addressDapp);\n    const accountBalance = await this.getBalanceByAccount(addressDapp);\n    console.log(`accountBalance => ${accountBalance}`);\n    this.balanceOf = accountBalance;\n  }\n\n  async checarAprovacion(): Promise<void> {\n    const addressPropietario =  this.consultaAprobacionExternaForm.get('addressPropietario')?.value;\n    const addressAprovada =  this.consultaAprobacionExternaForm.get('addressAprovada')?.value;\n    //return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n    const tokensAprovados = await this.getAllowance(addressPropietario, addressAprovada);\n    console.log(tokensAprovados);\n    this.tokensAprovados =tokensAprovados;\n  }\n\n  async transferirTokens(): Promise<void> {\n    const addressDestino = this.transferirForm.get('addressDestino')?.value;\n    const tokensEnviados = this.transferirForm.get('cantidadTokens')?.value;\n\n    this.web3s.contrato.methods.transfer(addressDestino,tokensEnviados).send({from: this.web3s.accounts[0]})\n    .then((response:any) => {\n      this.resultTransferencia = \"Transacción realizada!\";\n      this.blockHash = response.blockHash;\n      this.blockNumber = response.blockNumber;\n      this.from = response.from;\n      this.transactionHash = response.transactionHash;\n      this.getBalance();\n   })\n   .catch((error: any) => {\n      console.log(error);\n      this.resultTransferencia = \"Error en la transacción!\";\n   });\n  }\n\n  async aprovarUsoDeTokens(): Promise<void> {\n    const addressAprobada = this.aprovarForm.get('addressAprobar')?.value;\n    const cantidadTokens = this.aprovarForm.get('cantidadTokens')?.value;\n\n    console.log(addressAprobada);\n    console.log(cantidadTokens);\n\n    this.web3s.contrato.methods.approve(addressAprobada,cantidadTokens).send({from: this.web3s.accounts[0]})\n    .then((response:any) => {\n      this.resultAprove = \"Transacción realizada!\";\n      this.blockHash = response.blockHash;\n      this.blockNumber = response.blockNumber;\n      this.from = response.from;\n      this.transactionHash = response.transactionHash;\n      this.getBalance();\n   })\n   .catch((error: any) => {\n      console.log(error);\n      this.resultAprove = \"Error en la transacción!\";\n   });\n  }\n\n  async transferirTokensAprobados(): Promise<void> {\n    const addressRemitenteFrom = this.transferirFromForm.get('addressRemitenteFrom')?.value;\n    const addressDestinoFrom = this.transferirFromForm.get('addressDestinoFrom')?.value;\n    const tokensEnviadosFrom = this.transferirFromForm.get('cantidadTokensFrom')?.value;\n\n    this.web3s.contrato.methods.transferFrom(addressRemitenteFrom,addressDestinoFrom,tokensEnviadosFrom).send({from: this.web3s.accounts[0]})\n    .then((response:any) => {\n      this.resultTransferenciaAprobada = \"Transacción realizada!\";\n      this.blockHash = response.blockHash;\n      this.blockNumber = response.blockNumber;\n      this.from = response.from;\n      this.transactionHash = response.transactionHash;\n      this.getBalance();\n   })\n   .catch((error: any) => {\n      console.log(error);\n      this.resultTransferenciaAprobada = \"Error en la transacción!\";\n   });\n  }\n\n\n  //----------------------Termina--------------//\n\n  borrar(): void {\n    this.resultado = \"\";\n    this.blockHash = \"\";\n    this.blockNumber = \"\";\n    this.from = \"\";\n    this.transactionHash = \"\";\n  }\n  \n  subscribeToEvents() {\n    // Subscribe to pending transactions\n    const self = this;\n    this.web3s.contrato.events.Transfer({\n                                              fromBlock: 0\n                                            },\n                                            (error: any, event: any) => {\n                                              if (!error){\n                                                // setInterval(() => {\n\n                                                  const abiDecoder = require('abi-decoder'); // NodeJS\n                                                  abiDecoder.addABI(this.web3s.abi);\n                                                  \n                                                  this.web3s.web3js.eth.getTransaction(event.transactionHash).then(async (data: any) => {\n\n                                                    const decodedData = abiDecoder.decodeMethod(data.input);\n\n                                                    if(decodedData != undefined) {\n\n                                                      //recuperando datos registrados al enviar puntos\n                                                      //datos recuperados: amount, rewardPoints\n                                                      if(decodedData.name == 'sendPoints') {\n                                                        this.amount = decodedData.params[1].value\n                                                        this.rewardPoints = decodedData.params[2].value;\n                                                        this.exchangedRewardPoints = '0';\n                                                        this.totalRewardPoints = decodedData.params[3].value;\n\n                                                        this.elementos.push(\n                                                          { blockHash: event.blockHash,\n                                                            transactionHash: event.transactionHash,\n                                                            blockNumber:event.blockNumber,                                            \n                                                            amount: this.amount,\n                                                            rewardPoints: this.rewardPoints,\n                                                            totalRewardPoints: this.totalRewardPoints,\n                                                            accountAddress: event.returnValues.to\n                                                          }\n                                                        );\n  \n                                                        this.elementos = this.elementos.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n\n                                                      //recuperando data de los puntos intercambiados\n                                                      //datos recuperados: exchangedRewardPoints\n                                                      }else if(decodedData.name == 'exchangePoints') {\n                                                        this.exchangedRewardPoints = decodedData.params[1].value;\n                                                        this.totalRewardPoints = decodedData.params[2].value;\n\n                                                        this.elementosClient.push(\n                                                          { blockHash: event.blockHash,\n                                                            transactionHash: event.transactionHash,\n                                                            blockNumber:event.blockNumber,                                            \n                                                            exchangedRewardPoints: this.exchangedRewardPoints,\n                                                            totalRewardPoints: this.totalRewardPoints,\n                                                            accountAddress: event.returnValues.from\n                                                          }\n                                                        );\n  \n                                                        this.elementosClient = this.elementosClient.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n\n                                                      }else {\n\n                                                      }\n                                                      \n                                                    }\n\n                                                  });\n                                                  \n                                                // }, 500);                                                                                                \n                                              }                                              \n                                            });\n  }\n\n  scrollToBottom() {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}